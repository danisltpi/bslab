{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Starten (gdb)",
            "type": "cppdbg",
            "request": "launch",
            // Resolved by CMake Tools:
            "program": "${command:cmake.launchTargetPath}",
            "args": ["${input:arg1}", "${input:arg2}", "${input:arg3}", "${input:arg4}"],
            "stopAtEntry": false,
            "cwd": "${input:cwd}",
            "environment": [
                {
                    // add the directory where our target was built to the PATHs
                    // it gets resolved by CMake Tools:
                    "name": "PATH",
                    "value": "$PATH:${command:cmake.launchTargetDirectory}"
                }
            ],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Automatische Strukturierung und Einrückung für \"gdb\" aktivieren",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description":  "Disassemblierungsvariante auf Intel festlegen",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                }
            ]
        },
        {
          "name": "Starten (lldb)",
          "type": "cppdbg",
          "request": "launch",
          // Resolved by CMake Tools:
          "program": "${command:cmake.launchTargetPath}",
          "args": ["${input:arg1}", "${input:arg2}", "${input:arg3}", "${input:arg4}"],
          "stopAtEntry": false,
          "cwd": "${input:cwd}",
          "environment": [
              {
                  // add the directory where our target was built to the PATHs
                  // it gets resolved by CMake Tools:
                  "name": "PATH",
                  "value": "$PATH:${command:cmake.launchTargetDirectory}"
              }
          ],
          "externalConsole": false,
          "MIMode": "lldb"
        }
    ],
    "inputs": [
      {
        "id": "arg1",
        "type": "command",
        "command": "extension.commandvariable.file.fileAsKey",
        "args": {
          "@useCommand": "${command:cmake.launchTargetPath}",
          "@default": "",
          "mount.myfs": "mount"
        }
      },
      {
        "id": "arg2",
        "type": "command",
        "command": "extension.commandvariable.file.fileAsKey",
        "args": {
          "@useCommand": "${command:cmake.launchTargetPath}",
          "@default": "",
          "mount.myfs": "-l"
        }
      },
      {
        "id": "arg3",
        "type": "command",
        "command": "extension.commandvariable.file.fileAsKey",
        "args": {
          "@useCommand": "${command:cmake.launchTargetPath}",
          "@default": "",
          "mount.myfs": "log.txt"
        }
      },
      {
        "id": "arg4",
        "type": "command",
        "command": "extension.commandvariable.file.fileAsKey",
        "args": {
          "@useCommand": "${command:cmake.launchTargetPath}",
          "@default": "",
          "mount.myfs": "-f"
        }
      },
      {
        "id": "cwd",
        "type": "command",
        "command": "extension.commandvariable.file.fileAsKey",
        "args": {
          "@useCommand": "${command:cmake.launchTargetPath}",
          "@default": "${workspaceFolder}/exec",
          "integrationtests": "${workspaceFolder}/exec/mount"
        }
      }
    ]
}